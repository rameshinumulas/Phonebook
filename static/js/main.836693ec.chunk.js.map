{"version":3,"sources":["components/Appbar.js","components/Login.js","components/PhoneBook.js","components/Signup.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Appbar","classes","useState","anchorEl","setAnchorEl","SignInClick","setSignInClick","logOutClick","setlogOutClick","LogOutmethod","localStorage","removeItem","className","AppBar","position","Toolbar","IconButton","edge","onClick","event","currentTarget","color","aria-label","getItem","id","keepMounted","open","Boolean","onClose","MenuItem","Typography","variant","Button","style","to","maxWidth","borderRadius","boxShadow","fontSize","sideFont","fontFamily","pos","marginBottom","loginButton","backgroundColor","height","createButton","marginLeft","Login","Email","setEmail","Password","setPassword","emailError","Error","validEmail","setemailError","passwordError","Perror","validPassword","setPassowordError","errorfromBackend","seterrorfromBackend","addNewcontact","setNewcontact","Container","Grid","container","item","Card","CardContent","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","required","label","value","onChange","e","target","labelWidth","error","FormHelperText","type","CardActions","size","preventDefault","includes","Eerror","length","data","email","password","axios","post","then","responce","console","log","msg","catch","setItem","rootpaper","width","grid","display","flexDirection","maingrid","innerdiv","marginTop","alignItems","tableroot","justifyContent","paperoot","PhoneBook","FirstName","setFirstName","LastName","setLastName","Phone","setPhone","saveDetails","setDetails","dispalyPhoneError","displayNameError","alertError","phoneError","setPhoneError","usersContacts","setusersContacts","useEffect","collectdata","signleusersData","err","columns","name","options","filter","sort","customBodyRender","cursor","delete","deleteData","After_deleting","DeleteNumber","selectableRows","caseSensitive","search","download","viewColumns","print","AgianRendering","createMuiTheme","overrides","MUIDataTableBodyCell","ms","xs","Box","component","allData","NewcontactData","firstName","lastName","phoneNumber","userData","eachData","Paper","elevation","textAlign","typo","Signup","Username","setUsername","setemail","nameError","redError","validName","setNameError","signupMsgfromBackend","setsignupMsgfromBackend","Home","exact","path","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.836693ec.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\n// material ui...\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {Button,MenuItem} from '@material-ui/core';\r\n\r\n// react-router-dom...\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\nconst Appbar =()=>{\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [SignInClick, setSignInClick] = useState(false)\r\n  const [logOutClick, setlogOutClick] = useState(false)\r\n\r\n\r\n  // methods for handle menu bar ...\r\n  const handleMenus = (event)=>{\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n    setSignInClick(false)\r\n  };\r\n  const handleSignupPage = ()=>{\r\n    setSignInClick(true)\r\n    setAnchorEl(null);\r\n  }\r\n  const LogOutmethod = ()=>{\r\n    localStorage.removeItem(\"login email\")\r\n    setlogOutClick(true)\r\n    setSignInClick(false)\r\n    setAnchorEl(null);\r\n\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\"\r\n          className={classes.menuButton}\r\n          onClick = {handleMenus}\r\n          color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon  />\r\n          </IconButton>\r\n            {localStorage.getItem(\"login email\") ? \r\n              <Menu \r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose} \r\n               >\r\n              <MenuItem onClick={LogOutmethod} >Log out</MenuItem>\r\n              </Menu> :null\r\n            }\r\n        \r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Phone Book\r\n          {localStorage.getItem(\"login email\") ? \r\n            <Button  onClick={LogOutmethod}  style={{color:\"whitesmoke\"}} >Log out</Button> : \r\n            null \r\n          }\r\n          </Typography>\r\n            <Button  onClick={handleSignupPage}  style={{color:\"whitesmoke\"}}>Sign Up </Button> \r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* calling Redirect /////*/}\r\n      {logOutClick ? <Redirect to = \"/\" />:null}\r\n      {SignInClick ? <Redirect to = \"/newuser\" />:null}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Appbar;","import React,{useState} from 'react';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Grid ,Card,CardContent,Container} from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport {FormHelperText} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { makeStyles,} from '@material-ui/core/styles';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 395,\r\n    borderRadius:10,\r\n    boxShadow:\"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n  },\r\n  title: {\r\n    fontSize: 40,\r\n    color:\"rgb(0,128,255)\"\r\n  },\r\n  sideFont:{\r\n    fontSize:26,\r\n    fontFamily:\"Helvetica,Arial,sans-serif\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  loginButton:{\r\n    backgroundColor:\"#1877f2\",\r\n    height:50,fontSize:\"20px\",\r\n    fontFamily:\"Helvetica,Arial,sans-serif\",\r\n    color:\"whitesmoke\"\r\n  },\r\n  createButton:{\r\n    marginLeft:80,marginRight:80,height:50,\r\n    backgroundColor:\"#42B72A\",fontSize:\"15px\",\r\n    color:\"white\",\r\n    fontFamily:\"Helvetica,Arial,sans-serif\"\r\n  }\r\n});\r\n const Login = ()=> {\r\n    const classes = useStyles();\r\n    const [Email, setEmail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [validEmail, setemailError] = useState({emailError:'',Error:false})\r\n    const [validPassword,setPassowordError] = useState({passwordError:'',Perror:false})\r\n    const [errorfromBackend, seterrorfromBackend] = useState('')\r\n    const [addNewcontact,setNewcontact] = useState(false)\r\n\r\n\r\n    const CheckingDialogue =()=>{\r\n      setNewcontact(true)\r\n    }\r\n\r\n//inputs validating....\r\n    const userValid = ()=>{\r\n        if(!Email.includes(\"@\") || !Email.includes('.')){\r\n            setemailError({emailError:'please enter valid email',Eerror:Boolean(true)})\r\n            return false;\r\n        }\r\n        setemailError({emailError:'',Eerror:Boolean(false)})\r\n\r\n        if(Password.length<8){\r\n            setPassowordError({passwordError:'please enter strong password',Perror:Boolean(true)})\r\n            return false;\r\n        }\r\n        setPassowordError({passwordError:'',Perror:Boolean(false)})\r\n        return true;\r\n    }\r\n    \r\n// Details submiting.....\r\n    const LoginSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(userValid()){\r\n          const email = Email;\r\n          const password = Password;\r\n          const data = {\r\n            email,password\r\n          }\r\n//using axios for posting data...          \r\n          axios.post(\"http://localhost:5050/phonecontacts/post/login\",data)\r\n          .then(responce=>{\r\n            console.log(responce,\"posting data....\");  \r\n            seterrorfromBackend(responce.data.msg)\r\n          })\r\n          .catch(error=>{\r\n            console.log(error,\"errorrr...\");  \r\n          })\r\n          localStorage.setItem(\"login email\",data.email)\r\n        }\r\n    }\r\n   \r\n    return (\r\n      <div>\r\n        <Container maxWidth=\"sm\">\r\n            <Grid container >\r\n            <Grid item>\r\n                <h1 className={classes.title}>Phone Book</h1>\r\n                <p className={classes.sideFont}>it helps you to save your contact details here... </p>\r\n                </Grid>\r\n            <Grid item>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <p style={{color:\"red\"}}>{errorfromBackend}</p>\r\n                <CardContent >\r\n                    <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"component-outlined\">Email Or phoneNumber</InputLabel>\r\n                        <OutlinedInput\r\n                        required\r\n                            id=\"component-outlined\"\r\n                            label=\"Email Or phoneNumber\"\r\n                            value={Email}\r\n                            onChange={(e)=>setEmail(e.target.value)}\r\n                            labelWidth={60}\r\n                            error={Boolean(validEmail.emailError)}\r\n                        /> \r\n                            <FormHelperText id=\"component-error-text\"  style={{color:'red'}} >{validEmail.emailError}</FormHelperText>\r\n                            <br />\r\n                    </FormControl> \r\n  \r\n                    <FormControl fullWidth variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"component-outlined\">password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"component-password\"\r\n                            type=\"password\"\r\n                            label=\"password\"\r\n                            value={Password}\r\n                            onChange={(e)=>setPassword(e.target.value)}\r\n                            labelWidth={60}\r\n                            error={Boolean(validPassword.Perror)}\r\n                        /> \r\n                            <FormHelperText id=\"component-error-text\"  style={{color:'red'}} >{validPassword.passwordError}</FormHelperText>\r\n                    </FormControl>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant=\"contained\" size=\"large\" \r\n                  className = {classes.loginButton}\r\n                  onClick={LoginSubmit}\r\n                  >\r\n                      Log in\r\n                  </Button>\r\n                </CardActions>\r\n                <div className=\"line\">\r\n                  <hr />\r\n                </div>\r\n                <CardActions>\r\n                  <Button fullWidth variant=\"contained\" \r\n                  size=\"large\"\r\n                  className = {classes.createButton}\r\n                  onClick={CheckingDialogue}\r\n                  >\r\n                  Create New Account\r\n                  </Button>\r\n                </CardActions>\r\n            </Card>\r\n            \r\n          </Grid>\r\n          </Grid>\r\n        </Container>\r\n            {addNewcontact ? <Redirect to =\"/newuser\" /> : null }\r\n            {errorfromBackend === \"successfully login\" ? <Redirect to = \"/contactpage\" /> : null}\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\n\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Grid } from '@material-ui/core';\r\nimport {FormHelperText} from '@material-ui/core';\r\nimport { Button,Typography} from '@material-ui/core';\r\nimport { Paper,Box } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { createMuiTheme,} from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootpaper: {\r\n        width: theme.spacing(50),\r\n        height: theme.spacing(50),\r\n    },\r\n    grid: {\r\n        display:\"flex\",\r\n        flexDirection:'column'\r\n    },\r\n    maingrid: {\r\n\r\n    },\r\n    innerdiv: {\r\n        marginTop:30,\r\n        alignItems:\"center\",\r\n        // marginLeft:50\r\n    },\r\n    tableroot:{\r\n        maxWidth:1100,\r\n        display:\"flex\",\r\n        justifyContent:'center',\r\n    },\r\n    paperoot:{\r\n        maxWidth:800,\r\n    }\r\n  }));\r\nconst PhoneBook =()=> {\r\n    //Hooks state...\r\nconst [FirstName, setFirstName] = useState('')\r\nconst [LastName, setLastName] = useState('')\r\nconst [Phone, setPhone] = useState('')\r\nconst [saveDetails,setDetails] = useState([])\r\nconst [phoneError, setPhoneError] = useState({dispalyPhoneError:'',displayNameError:'', alertError:false})\r\nconst [usersContacts, setusersContacts] = useState([])\r\n\r\n\r\nconst classes = useStyles();\r\n\r\n\r\n// validating\r\nconst ValidDetails = ()=>{\r\n    console.log(Phone.length,\"phone nimberrrr\");\r\n\r\n    if(FirstName.length<1){\r\n        setPhoneError({displayNameError:\"please provide your name\",alertError:true})\r\n        return false\r\n    }\r\n    if(Phone.length !==10){\r\n        setPhoneError({dispalyPhoneError:\"mobile number must be 10 digits\",alertError:true})\r\n        return false\r\n    }\r\n   \r\n    return true\r\n}\r\n\r\nuseEffect(() => {\r\n    console.log(localStorage.getItem(\"login email\"));\r\n    \r\n    axios.post(\"http://localhost:5050/phonecontacts/post/gettingContacts\",[localStorage.getItem(\"login email\")])\r\n    .then(collectdata=>{\r\n        const signleusersData = collectdata.data.msg\r\n        setusersContacts(signleusersData)\r\n        console.log(usersContacts,\"for displaying data\");\r\n    })\r\n    .catch(err=>err)\r\n}, [])\r\nconst SubmitData=(e)=>{\r\n    if(ValidDetails()){\r\n        setPhoneError({\r\n        alertError:false\r\n        })\r\n        const allData=[...saveDetails];\r\n        setDetails(allData)\r\n        setFirstName('')\r\n        setLastName('')\r\n        setPhone('')\r\n        const firstName = FirstName;\r\n        const lastName = LastName;\r\n        const phoneNumber = Phone;\r\n        const NewcontactData = {\r\n            firstName,lastName,phoneNumber\r\n        }\r\n        axios.post(\"http://localhost:5050/phonecontacts/post/addnewcontact\",[localStorage.getItem(\"login email\"),NewcontactData])\r\n        .then(userData=>{\r\n            var eachData =userData.data.msg\r\n            console.log(eachData,'xcvbnm,');\r\n            \r\n        })\r\n        .catch(error=>console.log(error,\"error coming\"));\r\n\r\n        axios.post(\"http://localhost:5050/phonecontacts/post/gettingContacts\",[localStorage.getItem(\"login email\")])\r\n        .then(collectdata=>{\r\n            const signleusersData = collectdata.data.msg\r\n            setusersContacts(signleusersData)\r\n        })\r\n        .catch(err=>err)\r\n   \r\n    }\r\n}\r\n\r\nconst DeleteNumber = (value)=>{\r\n    axios.delete(`http://localhost:5050/phonecontacts/delete/singlenumber/${value}/${localStorage.getItem(\"login email\")}`)\r\n    .then(deleteData=>\r\n        {\r\n            const After_deleting = deleteData.data.msg\r\n            setusersContacts(After_deleting)\r\n        })\r\n    .catch(err=>{console.log(err,\"errr\");\r\n    })\r\n\r\n}\r\n\r\n\r\n//using MUI data table for displaying user contacts....\r\nconst getMuiTheme = () => createMuiTheme({\r\n    overrides: {\r\n      MUIDataTableBodyCell: {\r\n        root: {\r\n          backgroundColor:\"rgba(237, 241, 241, 0.979);\",\r\n          color:\"rgb(10,10,10)\"\r\n        },\r\n \r\n      },\r\n\r\n    }\r\n  })\r\n  \r\n\r\n  const columns = [ \r\n    {\r\n        name: \"firstname\",\r\n        label: \"First Name\",\r\n        options: {\r\n         filter: true,\r\n         sort: true,\r\n        }\r\n       },\r\n    {\r\n        name:\"lastname\",\r\n        label:'Last Name',\r\n        options:{\r\n            filter:true,\r\n            sort:true,\r\n        }\r\n    },\r\n    {\r\n        name:\"number\",\r\n        label:'Number',\r\n        options:{\r\n            filter:true,\r\n            sort:true,     \r\n        }\r\n    },\r\n    {\r\n        name: \"number\",\r\n        label: \"Remove\",\r\n        options: {\r\n        filter: true,\r\n        sort: true,\r\n        // selectableRows:false,\r\n        customBodyRender: (value) => {\r\n            return (\r\n               <DeleteIcon cursor=\"pointer\" onClick={()=> DeleteNumber(value)} />\r\n              )\r\n            }\r\n      }\r\n      }\r\n  ]\r\n  const options = {\r\n    selectableRows:\"none\",\r\n    filter: true,\r\n    caseSensitive:false,\r\n    search: true,\r\n    download: false,\r\n    viewColumns: false,\r\n    print: false,\r\n   };\r\nconst AgianRendering = ()=>{\r\n    return(\r\n    <MuiThemeProvider theme={getMuiTheme()}>\r\n    <MUIDataTable \r\n        title={\"Contacts\"} \r\n        data={usersContacts} \r\n        columns={columns} \r\n        options={options} \r\n    />\r\n    </MuiThemeProvider>\r\n    )\r\n}\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"contact-div\">\r\n            <Grid container spacing={6} className={classes.maingrid}>\r\n            <Grid item ms={3} xs={3}>\r\n\r\n            </Grid>\r\n            <Box>            \r\n            <Grid item ms={3} xs={6} className={classes.grid}>\r\n                <div style={{marginLeft:80}}>\r\n                <Typography variant=\"h6\" component=\"h3\" style={{color:'#ff3333'}}>\r\n                    Add new Contact\r\n                </Typography>\r\n                <Grid className={classes.innerdiv}>\r\n                <FormControl variant=\"outlined\" style={{width:250}}>\r\n                    <InputLabel htmlFor=\"component-outlined\">First Name</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"component-outlined\"\r\n                        label=\"First Name\"\r\n                        value={FirstName}\r\n                        onChange={(e)=>setFirstName(e.target.value)}\r\n                        error={Boolean(phoneError.alertError)}\r\n                    /> <br />\r\n                        <FormHelperText id=\"component-error-text\"  style={{color:'red'}} >{phoneError.displayNameError}</FormHelperText>\r\n                </FormControl>\r\n                </Grid>\r\n                <Grid>\r\n                <FormControl variant=\"outlined\" style={{width:250}}>\r\n                    <InputLabel htmlFor=\"component-outlined\">Last Name</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"component-outlined\"\r\n                        label=\"First Name\"\r\n                        value={LastName}\r\n                        onChange={(e)=>setLastName(e.target.value)}\r\n                    /> <br />\r\n                </FormControl>\r\n                </Grid>\r\n                <Grid>\r\n                <FormControl variant=\"outlined\" style={{width:250}}>\r\n                    <InputLabel htmlFor=\"component-outlined\">Phone</InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"component-outlined\"\r\n                        label=\"Phone\"\r\n                        type=\"number\"\r\n                        value={Phone}\r\n                        onChange={(e)=>setPhone(e.target.value)}\r\n                        error={Boolean(phoneError.alertError)}\r\n\r\n                    /> <br />\r\n                    <FormHelperText id=\"component-error-text\"  style={{color:'red'}} >{phoneError.dispalyPhoneError}</FormHelperText>\r\n                </FormControl> \r\n                </Grid>\r\n                <Button variant=\"contained\" style={{width:250,backgroundColor:\"#16a085\",color:\"#ffffff\"}} onClick={SubmitData}>\r\n                    Save\r\n                </Button>\r\n                </div>\r\n                </Grid>\r\n                </Box>\r\n                <Grid item ms={3} xs={12} className={classes.tableroot}>\r\n                <Paper elevation={10} className={classes.paperoot}>\r\n                    <AgianRendering />\r\n                </Paper>\r\n                </Grid>\r\n                </Grid>\r\n                <br />\r\n                </div>\r\n                <div>\r\n                \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhoneBook","import React,{useState} from 'react';\r\nimport '../App.css';\r\nimport {Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Grid ,Card,CardContent,Container,Typography} from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport {FormHelperText} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { makeStyles,} from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 395,\r\n    borderRadius:10,\r\n    boxShadow:\"0 2px 4px rgba(0, 0, 0, .1), 0 8px 16px rgba(0, 0, 0, .1)\",\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    color:\"white\",\r\n    textAlign:\"center\"\r\n\r\n  },\r\n  typo:{\r\n    textAlign:\"center\",\r\n  },\r\n  sideFont:{\r\n    fontSize:26,\r\n    fontFamily:\"Helvetica,Arial,sans-serif\"\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  loginButton:{\r\n    backgroundColor:\"#1877f2\",\r\n    height:50,fontSize:\"20px\",\r\n    fontFamily:\"Helvetica,Arial,sans-serif\",\r\n    color:\"whitesmoke\"\r\n  },\r\n  createButton:{\r\n    marginLeft:80,marginRight:80,height:50,\r\n    backgroundColor:\"#42B72A\",fontSize:\"15px\",\r\n    color:\"white\",\r\n    fontFamily:\"Helvetica,Arial,sans-serif\"\r\n  }\r\n});\r\nconst Signup=()=> {\r\n    const classes = useStyles();\r\n    const [Username, setUsername] = useState('')\r\n    const [Email, setemail] = useState('')\r\n    const [Password, setPassword] = useState('')\r\n    const [validEmail, setemailError] = useState({emailError:'',Error:false})\r\n    const [validName, setNameError] = useState({nameError:'',redError:false})\r\n    const [validPassword,setPassowordError] = useState({passwordError:'',Perror:false})\r\n    const [signupMsgfromBackend, setsignupMsgfromBackend] = useState('')\r\n\r\n \r\n// New user Details validating...\r\n    const signUpvalid = ()=>{\r\n        if(Username.length<4){\r\n            setNameError({nameError:\"your name must be 5 latters\",redError:Boolean(true)})\r\n            return false;\r\n        }\r\n        setNameError({nameError:\"\",redError:Boolean(false)})\r\n        if(!Email.includes(\"@\") || !Email.includes('.')){\r\n            setemailError({emailError:'please enter valid email',Eerror:Boolean(true)})\r\n            return false;\r\n        }\r\n        setemailError({emailError:'',Eerror:Boolean(false)})\r\n\r\n        if(Password.length<8){\r\n            setPassowordError({passwordError:'please enter strong password',Perror:Boolean(true)})\r\n            return false;\r\n        }\r\n        setPassowordError({passwordError:'',Perror:Boolean(false)})\r\n        return true;\r\n    }\r\n    \r\n\r\n    const SignupSubmit = (e) =>{\r\n        if(signUpvalid()){\r\n            const firstName = Username;\r\n            const email = Email;\r\n            const password = Password;\r\n            const data = {\r\n              firstName,email,password\r\n            }\r\n            console.log(data,\"storing dataaaaaa\");\r\n            \r\n            axios.post(\"http://localhost:5050/phonecontacts/post/signup\",data)\r\n            .then(responce=>\r\n            {\r\n              console.log(responce,\"posting data....\");\r\n              setsignupMsgfromBackend(responce.data.msg) \r\n            })\r\n            .catch(error=>\r\n            {\r\n              console.log(error,\"errorrr...\");\r\n            })\r\n          localStorage.setItem(\"login email\",data.email)\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"sm\">\r\n              <Grid container >\r\n                <Grid item>\r\n                  \r\n                </Grid>\r\n                <Grid item>\r\n                <Card className={classes.root} variant=\"outlined\">\r\n                    <Card elevation={12} style={{width:300,height:100,marginLeft:50,marginBottom:30,backgroundColor:\"#9f07b0\"}}>\r\n                          \r\n                    <h3 className={classes.title}>Sign Up</h3>\r\n                    </Card>\r\n                    <Typography variant=\"h5\" component=\"h3\" className={classes.typo}>Create your account</Typography>\r\n                    <CardContent >\r\n                      <p style={{color:\"red\"}}>{signupMsgfromBackend}</p>\r\n                        <FormControl fullWidth variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"component-outlined\">Username</InputLabel>\r\n                            <OutlinedInput\r\n                            required\r\n                                id=\"component-outlined\"\r\n                                label=\"Username\"\r\n                                value={Username}\r\n                                onChange={(e)=>setUsername(e.target.value)}\r\n                                labelWidth={60}\r\n                                error={Boolean(validName.redError)}\r\n                                style={{backgroundColor:\"#f5f6f7\"}}\r\n                            /> \r\n                                <FormHelperText id=\"component-error-text\"  style={{color:'red'}} >{validName.nameError}</FormHelperText>\r\n                                <br />\r\n                        </FormControl> \r\n                        \r\n                      \r\n                        <FormControl fullWidth variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"component-outlined\">email</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"component-email\"\r\n                                type=\"email\"\r\n                                label=\"email\"\r\n                                value={Email}\r\n                                onChange={(e)=>setemail(e.target.value)}\r\n                                labelWidth={60}\r\n                                error={Boolean(validEmail.Eerror)}\r\n                                style={{backgroundColor:\"#f5f6f7\"}}\r\n                            /> <br />\r\n                                <FormHelperText id=\"component-error-text\"  style={{color:'red'}} >{validEmail.emailError}</FormHelperText>\r\n                        </FormControl>\r\n                        <FormControl fullWidth variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"component-outlined\">new password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"component-password\"\r\n                                type=\"password\"\r\n                                label=\"new password\"\r\n                                value={Password}\r\n                                onChange={(e)=>setPassword(e.target.value)}\r\n                                labelWidth={60}\r\n                                error={Boolean(validPassword.Perror)}\r\n                                style={{backgroundColor:\"#f5f6f7\"}}\r\n                            /> \r\n                                <FormHelperText id=\"component-error-text\"  style={{color:'red'}} >{validPassword.passwordError}</FormHelperText>\r\n                        </FormControl>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                    <Button fullWidth variant=\"contained\" size=\"large\" \r\n                    className = {classes.loginButton}\r\n                    onClick={SignupSubmit}\r\n                    >\r\n                        sign Up\r\n                    </Button>\r\n                    </CardActions>\r\n                    <div className=\"line\">\r\n                    <hr />\r\n                    </div>\r\n                  \r\n                  </Card>\r\n                </Grid>\r\n\r\n              </Grid>\r\n          </Container>\r\n          \r\n          {signupMsgfromBackend === \"succuessfully your account created\" ? <Redirect to =\"/contactpage\" />:null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n","import React from 'react';\r\nimport Appbar from './Appbar';\r\nimport Login from './Login';\r\nimport {Switch,Route} from 'react-router-dom';\r\nimport PhoneBook from './PhoneBook';\r\nimport Signup from './Signup';\r\n\r\nexport default function Home() {\r\n    \r\n    return (\r\n        //Routing.....\r\n        <div>\r\n            <Appbar />        \r\n            <div style={{marginTop:100}}>\r\n            <Switch>\r\n            <Route exact path = \"/\" component={Login}  />\r\n            <Route exact path = \"/contactpage\" component={PhoneBook} />\r\n            <Route path = \"/newuser\" component={Signup} />\r\n            </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n    <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}